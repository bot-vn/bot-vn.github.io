<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Time Interface</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      padding: 20px;
      background-color: #1a1a1a;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      font-size: 18px;
    }
    .container {
      display: inline-block;
      text-align: center;
      background-color: white;
      padding: 24px;
      border: 4px solid #000000;
      border-radius: 12px;
      width: 300px;
    }
    .username {
      color: #0056b3;
      font-weight: bold;
      font-size: 20px;
      margin-bottom: 12px;
    }
    .box-info {
      font-size: 18px;
      margin: 14px 0;
      color: #000;
      font-weight: bold;
    }
    .flag {
      margin: 0 6px;
    }
    .timer-grid {
      margin: 20px 0;
    }
    .countdown-ms {
      font-size: 130px;
      font-weight: bold;
      color: #000;
      margin: 0;
      transition: color 0.3s;
      font-family: Arial, sans-serif;
      text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
    }
    .countdown-full {
      font-size: 40px;
      margin-bottom: 10px;
      color: #000;
      font-family: Arial, sans-serif;
    }
    button {
      background-color: #007BFF;
      color: white;
      padding: 10px 12px;
      border: none;
      font-size: 18px;
      border-radius: 6px;
      cursor: pointer;
      margin-top: 12px;
      width: 90%;
    }
    button:hover {
      background-color: #0056b3;
    }
    button.disabled {
      background-color: #cccccc;
      cursor: not-allowed;
    }
    button.red-text {
      color: #ff0000;
    }
    @keyframes flash {
      0% { opacity: 1; }
      50% { opacity: 0.5; }
      100% { opacity: 1; }
    }
  </style>
</head>
<body>
  <div class="container">
    <h2 class="username" id="username">@username</h2>
    <div class="box-info" id="boxinfo">üéÅ BOX: <span id="coins">--</span>/<span id="viewerRewardCount">--</span> <span class="flag" id="flag">üè≥Ô∏è</span> üëÄ <span id="viewers">--</span></div>
    <div class="timer-grid">
      <div class="countdown-ms" id="countdownMs">--</div>
      <div class="countdown-full" id="countdownFull">--:--:--</div>
    </div>
    <button id="actionButton" onclick="openTikTokLive()">Canh gi·ªù ho√†ng ƒë·∫°o</button>
  </div>
  <script>
    function getParam(name) {
      const urlParams = new URLSearchParams(window.location.search);
      return urlParams.get(name);
    }

    function base64Decode(encoded) {
      return atob(encoded);
    }

    function getFlag(code) {
      if (!code || code.length !== 2) return 'üè≥Ô∏è';
      const codePoints = [...code.toUpperCase()].map(c => 0x1F1E6 + c.charCodeAt(0) - 65);
      return String.fromCodePoint(...codePoints);
    }

    function openTikTokLive() {
      window.close();
    }

    const encodedData = getParam('data');
    let params = {};
    if (encodedData) {
      const decodedData = base64Decode(encodedData);
      params = JSON.parse(decodedData);
    } else {
      params = {
        user: 'username',
        box: 50,
        divide: 50,
        viewers: 56,
        country: 'US',
        end: Date.now() + 32500,
        createAt: Date.now().toString()
      };
    }

    const username = params.user;
    const coins = parseInt(params.box, 10);
    const viewerRewardCount = parseInt(params.divide, 10);
    const viewers = parseInt(params.viewers, 10);
    const countryCode = params.country;
    const endTime = parseInt(params.end, 10);

    document.getElementById('username').innerText = `@${username}`;
    document.getElementById('coins').innerText = coins;
    document.getElementById('viewerRewardCount').innerText = viewerRewardCount;
    document.getElementById('viewers').innerText = viewers;
    document.getElementById('flag').innerText = getFlag(countryCode);

    function updateTimer() {
      const now = Date.now();
      const remainingMs = Math.max(0, endTime - now);
      const totalSeconds = Math.floor(remainingMs / 1000);
      const ms = Math.floor((remainingMs % 1000) / 100);
      const hours = Math.floor(totalSeconds / 3600);
      const minutes = Math.floor((totalSeconds % 3600) / 60);
      const seconds = totalSeconds % 60;

      const countdownMsElement = document.getElementById('countdownMs');
      const countdownFullElement = document.getElementById('countdownFull');

      countdownMsElement.innerText = `${seconds}.${ms}`;
      countdownFullElement.innerText = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

      if (remainingMs > 0) {
        if (totalSeconds < 6) {
          countdownMsElement.style.color = '#800020';
        } else {
          countdownMsElement.style.color = '#000';
          countdownFullElement.style.color = '#000';
        }
        requestAnimationFrame(updateTimer);
      } else {
        countdownMsElement.innerText = '0.0';
        countdownFullElement.innerText = '00:00:00';
        countdownMsElement.style.color = '#800020'; // fix: gi·ªØ m√†u ƒë·ªè khi reload
        const btn = document.getElementById('actionButton');
        btn.innerText = 'R∆∞∆°ng n√†y ƒë√£ ƒë∆∞·ª£c m·ªü';
        btn.classList.add('disabled');
        btn.classList.add('red-text');
        btn.onclick = () => window.close();
        setTimeout(() => {
          window.close();
        }, 5000);
      }
    }

    requestAnimationFrame(updateTimer);
  </script>
</body>
</html>
 
